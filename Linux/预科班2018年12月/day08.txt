scp  root@176.4.11.42:/root/day11.txt  .
密码：Taren1
=============================

grep  选项：
-n    显示行号(line-number)
-i    忽略大小写(ignore-case)
-v    选择未匹配的、反转(invert-match)
		有内容的行
		grep  -v   "^$"   .bashrc 
-c    匹配到的行数(count)

==============================
正则表达式
（Regular Expression）


基本正则

^       以...开头
		grep  '^#'  .bashrc   过滤所有以#开头的行，即注释
$       以...结尾   
		grep  'hello$'   a.txt   过滤以 hello 结尾的行
[]      单个字符（从一个范围取值） [a-z] [A-Z] [0-9]
		[adef_]
[^]     ^表示范围以外的字符    [^a-z]  不是小写字母
.       任意单个字符
		grep  -v  '.'  a.txt    过滤空行

=================
转义符号：\

echo I'm Lilei.
结果：不是想要的

更正： echo I\'m Lilei.
结果：I'm Lilei.

==================
限定次数：

\{n\}     符合前面条件的，出现 n 次
			[a-z]\{5\}
\{n,m\}   符合前面条件的，出现 n~m 次
			[a-z]\{5,8\}
\{n,\}    符合前面条件的，出现至少 n 次
			[a-z]\{5,\}
*         匹配前一个字符任意次，*不单独使用
			"ha*"  h  ha  haa   haaa 
			
			
\(ab\)    ab组合作为整体	
			"(ha)*"  ha  haha  hahaha
		
==========================
空行   

grep   "^$"    .bashrc
grep  -v  "."  .bashrc  
  
==========================

扩展正则

+    最少一次   "a+"
?    最多一次（出现0次或1次）   "a?"
|    或者   "^root|^abc"
\b   单词边界   "\bvbc\b"
	  可以匹配到 vbc ，匹配不到hvbcdv
		
		
次数限定（不要忘了 -E  或者 egrep）：		
		
{n}     符合前面条件的，出现 n 次
			[a-z]{5}
{n,m}   符合前面条件的，出现 n~m 次
			[a-z]{5,8}
{n,}    符合前面条件的，出现至少 n 次
			[a-z]{5,}
			
			
(ab)    ab组合作为整体

===================
基本正则写法：
grep  "[a-z]\{5\}"   /etc/passwd


-E 选项，支持扩展正则

扩展正则写法：
grep -E  "[a-z]{5}"   /etc/passwd
egrep    "[a-z]{5}"   /etc/passwd

grep -E  和  egrep  效果一样，可以替换使用

========================
Shell编程

变量、分支语句、循环语句、逻辑判断

变量
a=10
a=55

命名：
不能以数字开头
以字母或_开头，名称可以由数字、字母、下划线组成
不要与系统保留字一样
名字是一个完整的单词（ hello_world_ha  helloWorld ）
	烤串命名   驼峰命名
尽可能要见名知意 width=80   button_count=6
	不要起如下变量名：
		a  b  a1   abcd  

		
"="是赋值符号
把右边的数值，赋值给左边的变量
获取变量a的值：$a

====================
分支语句

if [ 条件判断 ];then
	echo "优秀"
else
	echo "不优秀"
fi

====================
循环语句

for a in {1..100}
do
	echo $a
done




	