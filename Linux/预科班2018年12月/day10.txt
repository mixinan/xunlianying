变量赋值注意：
a=3
等号两边，不能有空格。

========================

for 循环


for  变量  in  列表
do
	echo $变量
done


列表里有几个值，就循环几次
每次循环，会从列表里取出一个值，赋值给变量(比如 a)
这个变量，可以在循环里直接使用（$a）



在for循环里，列表的表示方式：
1 2 3 6 8
{1,2,5,6}
{1..10}
`seq 10`    它是一条命令，要加``，表示从1数到10
		（sequence  顺序，序列）

=========================
九九乘法表

1*1=1
1*2=2 2*2=4
...
1*9=9 2*9=18 .....9*9=81


第九行的打印方式：
for a in {1..9}
do
	echo -n "$a*9=$[a*9] "
done
echo


也可以写成：
for a in `seq 9`
do
	echo -n "$a*9=$[a*9] "
done
echo


显示效果：
1*9=9 2*9=18 ... 9*9=81

======================
九九乘法表：

for b in `seq 9`
do

	for a in `seq $b`
	do
		echo -en "$a*$b=$[a*b]\t"
	done
	echo

done

=========================

算术运算 + - * /  %
expr 第一个数  操作符  第二个数
expr  5 + 8
expr  5 \* 8


判断是偶数和奇数

a=$1
if [ $[a%2] -eq 0 ];then
	echo "偶数"
else
	echo "奇数"
fi


====================
改变变量的大小

a=3
$[a+1]
echo $a
结果：3

变量的值想要变化，必须用"="重新赋值

a=3
a=$[a+1]
echo $a
结果：4

============================
let a=a+1   等价于  let  a+=1

a+=1    a=a+1
a-=1    a=a-1
a*=3    a=a*3  
a/=6    a=a/6
a%=29   a=a%29

===============
练习：

把1~100之间的所有奇数，显示出来

for  a  in  {1..100}
do
	if [ $[a%2] -ne 0 ];then
		echo "奇数"
	fi
done

========================

$()    可以执行命令，把结果赋值给变量
	   $(date) 功能与 `date` 一样
	   tar  -zcvf  backup`date +%m`.tar.gz  a.txt
	   tar  -zcvf  backup$(date +%m).tar.gz  a.txt
	   
$[]    可以进行算术运算
	   $[5*6]
	   a=9
	   $[a*8]
	   
${}    可以界定一个变量名称的范围，跟其它内容区分开
		a=10
		echo "本次一共下载了$akb"
		结果：本次一共下载了

		因为系统会误认为要打印 $akb 变量
		而这个变量不存在，所以打印的是空的内容

		echo "本次一共下载了$a kb"
		结果：本次一共下载了10 kb

		如果显示“本次一共下载了10kb”？
		echo "本次一共下载了${a}kb"
		
		$a   ${a}
		

============================

while 循环

while [ 条件判断 ]
do
	要执行的语句
done


如果条件成立，循环一直进行
直到不成立，循环结束

如果进入死循环，可以按 ctrl c 结束当前进程

=============
死循环

while :
do
	要执行的语句
done


while [ "a" = "a" ]
do
	要执行的语句
done

=====================

随机值
$RANDOM   (random 随机的、任意的）

echo $RANDOM

这个数字可能比较大，可以对它进行处理，限定一个范围


求余数的一个小技巧：
任何数对5求余数，结果肯定是 0~4 之间
任何数对10求余数，结果肯定是 0~9 之间

任何数对n求余数，结果肯定是 0~(n-1) 之间

$[RANDOM % 101]
结果：0~100之间

加大难度：
把随机值，限定在 1~100 之间
$[RANDOM%100+1]


练习：

620~888
0  ~268

echo $[RANDOM%269+620]

=============
猜数字游戏

1. 让系统生成一个随机数(1~100)
	answer=$[RANDOM % 100 + 1]
2. 提示用户开始猜数字
3. read 读取用户输入的数字
	read -p "请猜一个1~100之间的整数：" guess
4. 把两个数字进行比较，并提示用户
	“猜大了” “猜小了” “猜对了”
	
	if [ $guess -lt $answer ];then
		echo "你猜小了"
	elif [ $guess -gt $answer ];then
		echo "你猜大了"
	else
		echo "恭喜啊！你猜对了"
	fi
	
5. 如果猜得不对，继续猜，直到猜对为止
	
	break 可以结束循环
	
==================
逻辑判断

&&  逻辑与（并且）
	两个都成立，整体才成立(and)
||  逻辑或（或者）
	只要有一个成立，整体就成立(or)
!   逻辑非（取反）

a=8
if [ ! $a -gt 7 ];then
	echo "ok"
fi

========================
闰年

能被4整除并且不能被100整除
或者
能被400整除


read year
if [ $[year%4] -eq 0 ] && [ $[year%100] -ne 0 ] ||
	 [ $[year%400] -eq 0 ];then
	
	echo "$year是闰年"
else
	echo "$year是平年"
fi


