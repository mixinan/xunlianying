int main(){
	
	return 0;
}


//分析
int 返回值类型：整数
main 主函数，程序入口
()  参数列表
{}  代码段
return  返回结果
0    表示成功


C语言代码的书写：
	预处理：以#开头，后面不加分号;
	用;来区分不同的语句
	一个语句占一行，以;结尾
	每一句话实现独立的功能
	语句用{}分组管理，实现一个完整功能
	{}可以分层管理（互相嵌套）
	不同层次的语句，用Tab缩进表示，例如：

最外层{
	第二层
	第二层{
		第三层{
		
		}
	}
}


预处理语句：
	#include <stdio.h>
	或者 #include "xxx.h"
	
	include 包含
	"" 从当前目录里查找要包含的文件
	<> 从系统特定目录里查找要包含的文件


gcc 编译过程：
	1. gcc -E a.c   处理预处理指令
		把要包含的文件，替换过来，合并成新的文件

	练习：创建.h文件
			在xx.c文件里include一下
			gcc -E xx.c

	2. gcc -c a.c  
			处理预处理指令，并编译成机器认识的格式
	
	3. gcc  a.c  -o  hello    
			连接程序各部分，生成可执行文件，重命名



注释（程序员自己看，机器无视它的存在）：
	单行注释  //注释内容
	多行注释  /*
					注释内容
				 */
	
	
	ctrl + 空格  切换输入法
	page up (page down)   翻页选择需要的字


	
	数据类型：
		int  整数

		变量  int n=5;

		int 变量的数据类型
		n   变量的名称
		=   赋值符，左边是变量，右边是一个数字或表达式
		5   要赋给变量的值

		变量在使用前，要进行初始化
		int n;    声明一个整数变量n
		n=0;		 给变量n赋值为0

		int n=0;  声明一个整数变量n，并赋值为0


		编程语言里面的四则运算：
		加 + 减 - 乘 * 除 / 
		求余数  %   5%2=1

		printf("2*n的值为%d\n",n*2);

		占位符：
		%d   整数的占位符
		
		int m=5;
		int n=6;
		printf("n*m=%d\n",n*m);
		printf("n=%d,m=%d\n",n,m);



	scanf （跟printf一样，在stdio.h里）
		scanf("格式串",内存位置1，内存位置2....);
		
		一个值：

		int n;
		scanf("%d",&n);
		printf("n的值是%d\n",n);

		
		多个值：
		int n;
		int m;
		int a;
		scanf("%d%d%d",&n,&m,&a);
		printf("n的值是%d\n",n);


		int n = 8;
		&n (&取地址符号)

		
