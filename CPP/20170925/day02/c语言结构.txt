#include <stdio.h>
int main(){
      int int =5;

     printf("hello world!\n");
     return 0;
}



   
   
   
      #include <stdio.h>
      预处理指令
      把 stdio.h 文件包含到当前的.c文件里
      以#开头，后面没有分号
      < >  使用系统头文件
      " "    使用用户写的头文件
      
      gcc   -E   xx.c
      处理预处理指令
      把 stdio.h 头文件导入进来，
      与底下的内容合并成一个新文件
      
      
      io
      input
      output
      
      
      我是头文件

int main(){

    return 0;
}


练习：  编写test.h 头文件，写入内容
            编写test.c 文件，导入 test.h
            #include "test.h"
            通过 gcc -E test.c 查看结果

      
      int  整数类型
      写在函数名前面，表示 函数运行后的结果类型
      与return 的值，相对应。
      
      
      main 主要的
      主函数，是程序的入口
      执行.c文件里，先找main函数，从第一句开始执行
      
      
      ( )  参数列表，程序执行的必要条件（已知条件）
      
      { } 程序执行的代码块，程序主体
      
      return  返回值，程序执行完的结果
      一般以0作为返回值，表示执行成功
      一般以-1作为执行失败的返回值
      
      
      int jiafa(a,b){
          return a+b;
      }
      
      
      jiafa(5,6);
      
      printf("asdfasdf%d",n);
      
      
      /*
        以下这个函数，实现了做爆米花的功能
        它需要的参数是：玉米....
      */
      爆米花  zuo(玉米,糖,奶油,打火机){
          先开火;
          再放玉米;
          放糖;
          加热10分钟；
          万一(下雨,火灭了){
              爆米花加工不出来;
              return -1;
          }
          打开机器;
          装袋;
          
          return 一袋爆米花;
      }
      
      
      
      gcc  编译器，把.c文件翻译成计算机能看懂的内容
      默认生成 a.out 文件
      检测代码有没有语法问题
      
      gcc a.c  -o   hello.out
      
      
      
      
      
      + - * /
      
      *  乘
      /  除，只取商
      
      1*1=1
      2*1=2  2*2=4
      =====
      5*5=25  5*6=30   
      
      
      int chang;
      int kuan;
      printf("请输入宽:");
      scanf("%d",&kuan);
      printf("请输入长:");
      scanf("%d",&chang);
      
      
      scanf("%d%d",&chang,&kuan);
      
      
      %f   浮点数的占位符   5.563
      
      6-5.5=0.50000
      
      int r;
      2*3.14*r; 
      
      %g  去除数字后面多余的0
      
      
      radius  半径
      
      
      
      
      
      
      
